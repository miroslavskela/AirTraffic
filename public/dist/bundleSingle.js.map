{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/js/ctrlSingle.js","public/js/data.js","public/js/ui.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logo","adaptLogo","baseUrl","baseUrl1","displaySingleFlight","displayError","getFlightDetails","singleFlightData","JSON","parse","localStorage","getItem","man","document","querySelector","addEventListener","event","preventDefault","clear","window","history","back","Flight","[object Object]","flight","ldv","this","id","Id","altitude","Alt","model","Mdl","trak","Trak","from","From","to","To","Man","logo","adaptData","lastDv","acList","map","$tableBody","$","displayFlights","flights","empty","sort","b","forEach","flightData","getImage","createFlightView","append","errorMsg","message","createSingleFlightView"],"mappings":"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","file":"bundleSingle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const { Logo, adaptLogo, baseUrl, baseUrl1 } = require(\"./data.js\");\r\nconst { displaySingleFlight, displayError } = require(\"./ui.js\");\r\nconst initSingleFlight = () => {\r\n getFlightDetails();\r\n}; // function that is invoked in html script when document is ready\r\n\r\ngetFlightDetails = () => {\r\n  let singleFlightData = JSON.parse(localStorage.getItem(\"flightInfo\"));\r\n  if (singleFlightData) {\r\n    displaySingleFlight(singleFlightData, singleFlightData.man);\r\n  } else {\r\n    displayError();\r\n  }\r\n}; // function that parse data from localstorage and displays single flight data and logo which is received as response parameter\r\n\r\nconst button = document.querySelector(\".waves-effect\");\r\nbutton.addEventListener(\"click\", function(event) {\r\n  event.preventDefault();\r\n  localStorage.clear();\r\n  window.history.back();\r\n}); // go back to all flight page, but with reloading data\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", initSingleFlight);\r\n\r\n\r\n","\r\n\r\nconst baseUrl =  \"http://public-api.adsbexchange.com/VirtualRadar/AircraftList.json?lat=\"\r\nconst baseUrl1 = \"https://autocomplete.clearbit.com/v1/companies/suggest?query=\"\r\n\r\nclass Flight{\r\n    constructor(flight, ldv){\r\n    this.id = flight.Id\r\n    this.altitude = flight.Alt || \"No data\"\r\n    this.model = flight.Mdl\r\n    this.ldv = ldv \r\n    this.trak = flight.Trak\r\n    this.from = flight.From || \"No data\"\r\n    this.to = flight.To || \"No data\"\r\n    this.man = flight.Man\r\n }\r\n\r\n getImage(){\r\n     if(this.trak > 180){\r\n         return (\"<img class='sidewest' width='20px' src='../img/planewest.png' title='West'/>\")\r\n     } else{\r\n         return (\"<img class='sideeast' width='20px' src='../img/planeeast.png' title='East'/>\")\r\n     }\r\n }\r\n} // Flight object\r\n\r\nclass Logo{\r\n    constructor(logo){\r\n        this.logo = logo.logo || \"No image available\"\r\n    }\r\n} // Logo object\r\n\r\n\r\nconst adaptData = (flight) => {\r\n    const ldv = flight.lastDv\r\n    const flights = flight.acList\r\n    const flightsArray = flights.map((flight) => {\r\n        return new Flight(flight, ldv)\r\n})\r\n\r\nreturn flightsArray\r\n} // function that receives flights and and makes Flight object of them and returns array of flight objects\r\n\r\nconst adaptLogo = (logo) => {\r\n    if(logo.length > 1){\r\n    return new Logo(logo[0])\r\n} else{\r\n    return new Logo(logo)\r\n}\r\n} //function that accepts logo and makes logo object, if there is array of responses always take first item of array\r\n\r\nmodule.exports = {Flight, Logo, adaptData, adaptLogo, baseUrl, baseUrl1}\r\n\r\n","\r\n$tableBody = $('.body');\r\nconst createFlightView = (flight, i) => {\r\n     const {altitude, id, trak} = flight\r\n        return ( `<tr>\r\n        <td class=\"flight-field\" data-flight-id=${i}>${flight.getImage()}</td>\r\n        <td class=\"flight-field\" data-flight-id=${i}>${altitude}</td>\r\n        <td class=\"flight-field\" data-flight-id=${i}>${id}</td>\r\n        </tr>`\r\n    )\r\n} // function that accepts flight and makes table cells of flight data and also add attr index which is used to show single flight data\r\n\r\nconst createSingleFlightView = (flight, logo) => {\r\n    const {model, from, to} = flight\r\n    const url = \"http://logo.clearbit.com/\";\r\n    return ( `<tr>\r\n    <td>${model}</td>\r\n    <td>${from}</td>\r\n    <td>${to}</td>\r\n    <td><img width=\"50px\" src=${url}${logo}.com  alt=${logo}></td>\r\n    </tr>`\r\n)\r\n} // function that accepts flight and logo and makes table cells with those data to show info about single flight\r\n\r\nconst displayFlights = (flights) => {\r\n    $tableBody.empty()\r\n    const sortedArray =  flights.sort(function(a,b){\r\n        return b.altitude-a.altitude\r\n    })\r\n\r\n    sortedArray.forEach((flight, i) => {\r\n        const flightData  = createFlightView(flight,i)\r\n        $tableBody.append(flightData)\r\n    })\r\n} // functions that accepts array of flights and for each flight makes flight view and append it to table body\r\n\r\nconst displaySingleFlight = (flight, logo) => {\r\n    const flightData = createSingleFlightView(flight,logo)\r\n    $tableBody.append(flightData) \r\n    \r\n} // function that accepts one flight and create single flight view and append it to table body\r\n\r\n\r\nconst displayError = () => { \r\n    const errorMsg = new Error(\"Could not fetch data!\")\r\n    $tableBody.append(`<tr><td class=\"error\" colspan=\"3\">${errorMsg.message}<td></tr>`)\r\n} // display error function \r\n\r\n\r\n\r\n\r\nmodule.exports = {displayFlights, displayError, displaySingleFlight}"]}